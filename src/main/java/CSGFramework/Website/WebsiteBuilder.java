package CSGFramework.Website;

import java.util.ArrayList;
import java.util.List;

/**
 * Builder class for website object
 */
public class WebsiteBuilder {
    private String name = "mywebsite.com";
    private Webpage homeWebpage = new WebpageBuilder().setUrl(name).build();
    private List<Webpage> allWebpages = new ArrayList<>(){{add(homeWebpage);}};

    /**
     * build an instance of the website with all values set
     * generates actions redirecing actions
     * @return
     */
    public Website build(){
        Website website = new Website(name, homeWebpage, allWebpages);
        for (Webpage webpage:allWebpages) {
            webpage.setWebsite(website);
        }
        generateRedirectingActions(3);
        return website;
    }

    /**
     * sets the name of the website
     * @param name String, the name to be set
     * @return this instance of the builder
     */
    public WebsiteBuilder setName(String name) {
        this.name = name;
        return this;
    }

    /**
     * sets the homepage for the website
     * @param homeWebpage Webpage, the home webpage for this website
     * @return this instance of the builder
     */
    public WebsiteBuilder setHomeWebpage(Webpage homeWebpage) {
        this.homeWebpage = homeWebpage;
        return this;
    }

    /**
     * adds multiple pages to the website
     * @param allWebpages List of pages to be addded
     * @return this instance of the builder
     */
    public WebsiteBuilder addPages(List<Webpage> allWebpages) {
        this.allWebpages.addAll(allWebpages);
        return this;
    }

    /**
     * adds one page to the website
     * @param webpage the webpage to be added
     * @return this instance of the builder
     */
    public WebsiteBuilder addPage(Webpage webpage) {
        this.allWebpages.add(webpage);
        return this;
    }


    /**
     * generates pages and redirecting actions to reach these pages from the homePage
     * @param numberOfRedirectingActions int, the number of redirecting action to be created
     * @return this instance of the builder
     */
    public WebsiteBuilder generateRedirectingActions(int numberOfRedirectingActions){
        for(int i = 0; i < numberOfRedirectingActions; i++){
            Action action = new ActionBuilder().build();
            Webpage webpage = new WebpageBuilder().setUrl("randompage" + i + ".com").setNumberOfAutogeneratedActions(2).build();
            homeWebpage.addRedirectingAction(action,webpage);
            allWebpages.add(webpage);
        }
        return this;
    }






}
